[
  {
    "type": "Coding",
    "title": "接雨水",
    "category": [
      "LeetCode",
      "Array",
      "Dynamic Programming",
      "Stack",
      "Two Pointers"
    ],
    "difficulty": "Hard"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "Data Structures",
      "数据结构",
      "Redis"
    ],
    "difficulty": "Medium",
    "title": "ZSET表的原理，怎么实现的用户登录限流，表占用过大时是手动还是自动删除数据，占用上限是如何设置的"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统",
      "Networking",
      "网络"
    ],
    "difficulty": "Hard",
    "title": "Epoll的原理"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Tree",
      "树"
    ],
    "difficulty": "Hard",
    "title": "红黑树的原理，在Epoll中红黑树的键值分别是什么"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统",
      "Networking",
      "网络"
    ],
    "difficulty": "Hard",
    "title": "epoll_wait返回的队列是由谁将事件加入队列的"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "线程池"
    ],
    "difficulty": "Medium",
    "title": "线程池有几个分别是什么作用"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统"
    ],
    "difficulty": "Medium",
    "title": "Linux中的硬连接和软连接，硬连接软连接可以比作哪些智能指针"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统"
    ],
    "difficulty": "Medium",
    "title": "虚拟内存，不同操作系统下页表是几级"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统"
    ],
    "difficulty": "Medium",
    "title": "中断机制是怎么处理的"
  },
  {
    "type": "Coding",
    "category": [
      "Algorithms",
      "算法",
      "Dynamic Programming",
      "动态规划",
      "LeetCode"
    ],
    "difficulty": "Medium",
    "title": "最长公共子序列"
  },
  {
    "type": "Coding",
    "category": [
      "Algorithms",
      "算法",
      "String",
      "字符串",
      "LeetCode"
    ],
    "difficulty": "Medium",
    "title": "无重复最长子串"
  },
  {
    "type": "Question",
    "category": [
      "Networking",
      "网络",
      "TCP",
      "UDP"
    ],
    "difficulty": "Medium",
    "title": "TCP和UDP的区别"
  },
  {
    "type": "Coding",
    "category": [
      "Algorithms",
      "算法",
      "Array",
      "数组",
      "LeetCode"
    ],
    "difficulty": "Medium",
    "title": "区间合并"
  },
  {
    "type": "Question",
    "category": [
      "Operating System",
      "操作系统",
      "Golang",
      "Go"
    ],
    "difficulty": "Medium",
    "title": "进程线程协程，gmp调度？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "MySQL"
    ],
    "difficulty": "Medium",
    "title": "乐观锁和悲观锁？讲讲怎么实现？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发"
    ],
    "difficulty": "Medium",
    "title": "死锁的条件？解决办法？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "MySQL"
    ],
    "difficulty": "Medium",
    "title": "MySQL事务特性以及实现"
  },
  {
    "type": "Question",
    "category": [
      "System Design",
      "系统设计"
    ],
    "difficulty": "Hard",
    "title": "如果你的项目有千万级的用户量，你怎么优化"
  },
  {
    "type": "Question",
    "category": [
      "Design Patterns",
      "设计模式"
    ],
    "difficulty": "Easy",
    "title": "设计模式了解过哪些"
  },
  {
    "type": "Coding",
    "category": [
      "Algorithms",
      "算法",
      "Graph",
      "图",
      "LeetCode"
    ],
    "difficulty": "Medium",
    "title": "岛屿数量"
  },
  {
    "type": "Question",
    "category": [
      "Networking",
      "网络",
      "TCP",
      "UDP",
      "HTTP"
    ],
    "difficulty": "Medium",
    "title": "TCP和UDP区别，HTTP用的谁，为什么？"
  },
  {
    "type": "Question",
    "category": [
      "Networking",
      "网络",
      "HTTP"
    ],
    "difficulty": "Easy",
    "title": "HTTP状态码"
  },
  {
    "type": "Question",
    "category": [
      "Networking",
      "网络",
      "HTTP",
      "TCP",
      "UDP"
    ],
    "difficulty": "Medium",
    "title": "HTTP是长连接还是短连接，如何用UDP实现"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "MySQL"
    ],
    "difficulty": "Medium",
    "title": "MySQL索引如何实现的。"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "MySQL"
    ],
    "difficulty": "Medium",
    "title": "MySQL索引为什么用B+不用B树？如果把内容存在内存上，用B树会不会快一点。"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表",
      "MySQL"
    ],
    "difficulty": "Medium",
    "title": "分库分表的常用中间件有哪些？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计"
    ],
    "difficulty": "Hard",
    "title": "有哪些问题中间件无法提供帮助、只能改写业务代码的场景？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "MySQL",
      "分库分表"
    ],
    "difficulty": "Easy",
    "title": "分库分表使用了什么中间件？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Medium",
    "title": "分库分表的实现场景和方式有哪些？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Medium",
    "title": "分表之后，要查询两个表的数据要怎么查？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Medium",
    "title": "分库分表的优缺点是什么？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Hard",
    "title": "分库分表业界有哪些替代方案？（提示：分布式文件系统，因为分库分表会出现降低QPS，比如range查询失效）"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Hard",
    "title": "为什么做了分库分表后分页比较困难了？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Hard",
    "title": "如果10亿数据要分表，要怎么分？业务怎么切？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "Concurrency",
      "并发",
      "分库分表"
    ],
    "difficulty": "Hard",
    "title": "分库分表怎么保证数据一致性？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Medium",
    "title": "分库分表选的什么分片键？什么分片算法？"
  },
  {
    "type": "Question",
    "category": [
      "Database",
      "数据库",
      "System Design",
      "系统设计",
      "分库分表"
    ],
    "difficulty": "Medium",
    "title": "分库分表后的分布式ID怎么做？"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Concurrency",
      "并发",
      "动态代理"
    ],
    "difficulty": "Medium",
    "title": "JDK和Cglib动态代理有什么区别？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Array",
      "数组",
      "Linked List",
      "链表",
      "Java"
    ],
    "difficulty": "Easy",
    "title": "ArrayList和LinkedList的区别？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Hash Table",
      "哈希表",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "HashMap原理?"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Tree",
      "树",
      "Binary Search Tree",
      "二叉搜索树",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "红黑树红和黑代表什么?"
  },
  {
    "type": "Coding",
    "category": [
      "Data Structures",
      "数据结构",
      "Hash Table",
      "哈希表",
      "Array",
      "数组",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "HashMap数组索引怎么确认？"
  },
  {
    "type": "Question",
    "category": [
      "Algorithms",
      "算法",
      "Hash Table",
      "哈希表",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "常见的哈希算法了解哪些？解决哈希冲突的方法?"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Java"
    ],
    "difficulty": "Easy",
    "title": "Java有什么集合容器？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Tree",
      "树",
      "Sorting",
      "排序",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "Treemap怎么排序，有什么注意事项，可不可以自定义排序，排序的数据结构是什么"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Concurrency",
      "并发",
      "Array",
      "数组",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "CopyOnWriteArrayList怎么保证线程安全，优点是这个，那缺点呢？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Concurrency",
      "并发",
      "Array",
      "数组",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "ArrayList线程安全吗，想要使用线程安全的ArrayList怎么办？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Hash Table",
      "哈希表",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "假设你要遍历一个 HashMap，同时删除一些 key，应该怎么编写代码？"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Concurrency",
      "并发",
      "Hash Table",
      "哈希表",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "HashTable怎么保证线程安全的，ConcurrentHashMap呢，怎么去选择呢"
  },
  {
    "type": "Question",
    "category": [
      "Data Structures",
      "数据结构",
      "Hash Table",
      "哈希表",
      "Tree",
      "树",
      "Binary Search Tree",
      "二叉搜索树",
      "Java"
    ],
    "difficulty": "Hard",
    "title": "Hashmap 为什么选择红黑树而不是AVL"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Reflection",
      "反射"
    ],
    "difficulty": "Medium",
    "title": "你对Java的反射如何理解的，原理是什么？"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Reflection",
      "反射"
    ],
    "difficulty": "Medium",
    "title": "反射机制对于其他没有反射的语言有什么好处？"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Java",
      "Reflection",
      "反射"
    ],
    "difficulty": "Medium",
    "title": "Java中哪些效率高的功能是基于反射做的呢？"
  },
  {
    "type": "Question",
    "category": [
      "String",
      "字符串",
      "Java",
      "Java"
    ],
    "difficulty": "Easy",
    "title": "byte怎么转字符串？"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Java",
      "Reflection",
      "反射"
    ],
    "difficulty": "Medium",
    "title": "反射的应用场景"
  },
  {
    "type": "Question",
    "category": [
      "Java",
      "Java",
      "Reflection",
      "反射"
    ],
    "difficulty": "Medium",
    "title": "反射为什么性能开销高"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "volatile 关键字的作用是什么？不加这个关键字对变量修改就不会加到主存吗？加了这个关键字还需要加锁吗？这个关键字的一些应用场景都有哪些呢？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池",
      "Java"
    ],
    "difficulty": "Hard",
    "title": "假设让你写一个线程池工具，你觉得应该怎么去设计呢？应该有什么变量？有什么接口？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "比如核心线程数量是5，最大线程是10，现在来了11个任务，怎么调度？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "线程池的执行流程?"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "线程池是否会出现并发安全问题?"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池"
    ],
    "difficulty": "Hard",
    "title": "动态线程池是怎么实现的？动态调整机制是什么？我们应该设置多少核心线程数和最大线程数，以及通过哪里去设置？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池"
    ],
    "difficulty": "Medium",
    "title": "动态线程池的“动态”体现在什么地方？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池"
    ],
    "difficulty": "Medium",
    "title": "线程池过程和原理"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Thread Pool",
      "线程池"
    ],
    "difficulty": "Hard",
    "title": "你怎么实际计算需要的核心线程数目和阻塞队列大小?你怎么设定拒绝策略?高请求下有的用户的请求被拒绝了，你会怎么处理反映给用户?"
  },
  {
    "type": "Question",
    "category": [
      "String",
      "字符串",
      "Java",
      "Java"
    ],
    "difficulty": "Easy",
    "title": "String，StringBuilder，StringBuffer的区别?"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "synchronized和reentrantlock的区别？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "java乐观锁和悲观锁？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "Java 有哪些重要的锁？"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Hard",
    "title": "AQS实现"
  },
  {
    "type": "Question",
    "category": [
      "Concurrency",
      "并发",
      "Java",
      "Java"
    ],
    "difficulty": "Medium",
    "title": "有了synchornized为什么还会出现lock"
  }
]